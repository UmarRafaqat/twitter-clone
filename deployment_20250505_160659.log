[2025-05-05 16:06:59] Starting Mini-Twitter deployment...
[2025-05-05 16:06:59] Checking for required tools...
[2025-05-05 16:06:59] Docker and Docker Compose are available.
[2025-05-05 16:06:59] Building and starting containers...
time="2025-05-05T16:07:00+05:00" level=warning msg="E:\\Data Science MS\\big data\\bigdata-project\\mini-twitter-v3\\docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
#0 building with "desktop-linux" instance using docker driver

#1 [api internal] load build definition from Dockerfile
#1 transferring dockerfile: 251B 0.1s done
#1 DONE 0.1s

#2 [api internal] load metadata for docker.io/library/python:3.9-slim
#2 DONE 28.8s

#3 [api internal] load .dockerignore
#3 transferring context: 2B 0.0s done
#3 DONE 0.1s

#4 [api 1/5] FROM docker.io/library/python:3.9-slim@sha256:bef8d69306a7905f55cd523f5604de1dde45bbf745ba896dbb89f6d15c727170
#4 DONE 0.0s

#5 [api internal] load build context
#5 transferring context: 44.36kB 0.2s done
#5 DONE 0.2s

#6 [api 2/5] WORKDIR /app
#6 CACHED

#7 [api 3/5] COPY requirements.txt .
#7 CACHED

#8 [api 4/5] RUN pip install --no-cache-dir -r requirements.txt
#8 CACHED

#9 [api 5/5] COPY . .
#9 DONE 0.1s

#10 [api] exporting to image
#10 exporting layers 0.1s done
#10 writing image sha256:15d8b62c16e866108d6ba21fed7ffab3d9af4f846da3cfb970dcbd1a1df0f802 done
#10 naming to docker.io/library/mini-twitter-v3-api
#10 naming to docker.io/library/mini-twitter-v3-api 0.0s done
#10 DONE 0.1s

#11 [api] resolving provenance for metadata file
#11 DONE 0.0s

#12 [frontend internal] load build definition from Dockerfile
#12 transferring dockerfile: 157B done
#12 DONE 0.0s

#13 [frontend internal] load metadata for docker.io/library/node:16
#13 DONE 1.7s

#14 [frontend internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [frontend 1/5] FROM docker.io/library/node:16@sha256:f77a1aef2da8d83e45ec990f45df50f1a286c5fe8bbfb8c6e4246c6389705c0b
#15 DONE 0.0s

#16 [frontend internal] load build context
#16 transferring context: 59.37kB 0.0s done
#16 DONE 0.0s

#17 [frontend 2/5] WORKDIR /app
#17 CACHED

#18 [frontend 3/5] COPY package.json ./
#18 CACHED

#19 [frontend 4/5] RUN npm install
#19 CACHED

#20 [frontend 5/5] COPY . .
#20 DONE 0.1s

#21 [frontend] exporting to image
#21 exporting layers 0.1s done
#21 writing image sha256:0b7f1907a1f75d0952032e4679274abc7e24cb287be5dc2206ea13f88d309763 done
#21 naming to docker.io/library/mini-twitter-v3-frontend 0.0s done
#21 DONE 0.1s

#22 [frontend] resolving provenance for metadata file
#22 DONE 0.0s
 api  Built
 frontend  Built
 Network mini-twitter-v3_default  Creating
 Network mini-twitter-v3_default  Created
 Container mini-twitter-v3-cassandra-1  Creating
 Container mini-twitter-v3-postgres-1  Creating
 Container mini-twitter-v3-mongodb-1  Creating
 Container mini-twitter-v3-spark-master-1  Creating
 Container mini-twitter-v3-minio-1  Creating
 Container mini-twitter-v3-zookeeper-1  Creating
 Container mini-twitter-v3-cassandra-1  Created
 Container mini-twitter-v3-zookeeper-1  Created
 Container mini-twitter-v3-kafka-1  Creating
 Container mini-twitter-v3-spark-master-1  Created
 Container mini-twitter-v3-spark-worker-1  Creating
 Container mini-twitter-v3-minio-1  Created
 Container mini-twitter-v3-postgres-1  Created
 Container mini-twitter-v3-mongodb-1  Created
 Container mini-twitter-v3-spark-worker-1  Created
 Container mini-twitter-v3-kafka-1  Created
 Container mini-twitter-v3-api-1  Creating
 Container mini-twitter-v3-api-1  Created
 Container mini-twitter-v3-frontend-1  Creating
 Container mini-twitter-v3-frontend-1  Created
 Container mini-twitter-v3-postgres-1  Starting
 Container mini-twitter-v3-mongodb-1  Starting
 Container mini-twitter-v3-cassandra-1  Starting
 Container mini-twitter-v3-spark-master-1  Starting
 Container mini-twitter-v3-minio-1  Starting
 Container mini-twitter-v3-zookeeper-1  Starting
 Container mini-twitter-v3-zookeeper-1  Started
 Container mini-twitter-v3-zookeeper-1  Waiting
 Container mini-twitter-v3-postgres-1  Started
 Container mini-twitter-v3-mongodb-1  Started
 Container mini-twitter-v3-cassandra-1  Started
 Container mini-twitter-v3-minio-1  Started
 Container mini-twitter-v3-spark-master-1  Started
 Container mini-twitter-v3-spark-worker-1  Starting
 Container mini-twitter-v3-spark-worker-1  Started
 Container mini-twitter-v3-zookeeper-1  Healthy
 Container mini-twitter-v3-kafka-1  Starting
 Container mini-twitter-v3-kafka-1  Started
 Container mini-twitter-v3-postgres-1  Waiting
 Container mini-twitter-v3-mongodb-1  Waiting
 Container mini-twitter-v3-kafka-1  Waiting
 Container mini-twitter-v3-postgres-1  Healthy
 Container mini-twitter-v3-mongodb-1  Healthy
 Container mini-twitter-v3-kafka-1  Healthy
 Container mini-twitter-v3-api-1  Starting
 Container mini-twitter-v3-api-1  Started
 Container mini-twitter-v3-frontend-1  Starting
 Container mini-twitter-v3-frontend-1  Started
[2025-05-05 16:08:42] Containers started. Listing running containers:
CONTAINER ID   IMAGE                                      COMMAND                  CREATED              STATUS                             PORTS                                                       NAMES
71c65226e1e9   mini-twitter-v3-frontend                   "docker-entrypoint.s…"   About a minute ago   Up 1 second                        0.0.0.0:3000->3000/tcp                                      mini-twitter-v3-frontend-1
8cb97d32a244   mini-twitter-v3-api                        "uvicorn main:app --…"   About a minute ago   Up 1 second (health: starting)     0.0.0.0:8000->8000/tcp                                      mini-twitter-v3-api-1
5a75f6e9635e   bitnami/kafka:3.4                          "/opt/bitnami/script…"   About a minute ago   Up 26 seconds (healthy)            0.0.0.0:9092->9092/tcp                                      mini-twitter-v3-kafka-1
b1ac62062766   bitnami/spark:3.3                          "/opt/bitnami/script…"   About a minute ago   Up 34 seconds                                                                                  mini-twitter-v3-spark-worker-1
c1ac3ce0adc9   mongo:5                                    "docker-entrypoint.s…"   About a minute ago   Up 34 seconds (healthy)            0.0.0.0:27017->27017/tcp                                    mini-twitter-v3-mongodb-1
ef1f69fca7df   postgres:14                                "docker-entrypoint.s…"   About a minute ago   Up 34 seconds (healthy)            0.0.0.0:5433->5432/tcp                                      mini-twitter-v3-postgres-1
784493abce6c   minio/minio:RELEASE.2023-07-07T07-13-57Z   "/usr/bin/docker-ent…"   About a minute ago   Up 34 seconds (health: starting)   0.0.0.0:9000-9001->9000-9001/tcp                            mini-twitter-v3-minio-1
adc8bc896310   bitnami/zookeeper:3.8                      "/opt/bitnami/script…"   About a minute ago   Up 34 seconds (healthy)            2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp        mini-twitter-v3-zookeeper-1
28dc5227f229   bitnami/spark:3.3                          "/opt/bitnami/script…"   About a minute ago   Up 34 seconds                      0.0.0.0:7077->7077/tcp, 0.0.0.0:8080->8080/tcp              mini-twitter-v3-spark-master-1
56fae42825e0   cassandra:4                                "docker-entrypoint.s…"   About a minute ago   Up 34 seconds (healthy)            7000-7001/tcp, 7199/tcp, 9160/tcp, 0.0.0.0:9042->9042/tcp   mini-twitter-v3-cassandra-1
1624a33a4411   mini-twitter-api                           "uvicorn test_app:ap…"   12 minutes ago       Up 12 minutes                      0.0.0.0:8001->8000/tcp                                      mini-twitter-api-test
[2025-05-05 16:08:42] Waiting for services to be ready...
[2025-05-05 16:08:42] Waiting... (1/30)
[2025-05-05 16:08:43] Waiting... (2/30)
[2025-05-05 16:08:44] Waiting... (3/30)
[2025-05-05 16:08:46] Waiting... (4/30)
[2025-05-05 16:08:47] Waiting... (5/30)
[2025-05-05 16:08:48] Waiting... (6/30)
[2025-05-05 16:08:49] Waiting... (7/30)
[2025-05-05 16:08:50] Waiting... (8/30)
[2025-05-05 16:08:51] Waiting... (9/30)
[2025-05-05 16:08:53] Waiting... (10/30)
[2025-05-05 16:08:54] Waiting... (11/30)
[2025-05-05 16:08:55] Waiting... (12/30)
[2025-05-05 16:08:56] Waiting... (13/30)
[2025-05-05 16:08:58] Waiting... (14/30)
[2025-05-05 16:08:59] Waiting... (15/30)
[2025-05-05 16:09:00] Waiting... (16/30)
[2025-05-05 16:09:01] Waiting... (17/30)
[2025-05-05 16:09:02] Waiting... (18/30)
[2025-05-05 16:09:03] Waiting... (19/30)
[2025-05-05 16:09:04] Waiting... (20/30)
[2025-05-05 16:09:05] Waiting... (21/30)
[2025-05-05 16:09:07] Waiting... (22/30)
[2025-05-05 16:09:08] Waiting... (23/30)
[2025-05-05 16:09:09] Waiting... (24/30)
[2025-05-05 16:09:10] Waiting... (25/30)
[2025-05-05 16:09:11] Waiting... (26/30)
[2025-05-05 16:09:12] Waiting... (27/30)
[2025-05-05 16:09:13] Waiting... (28/30)
[2025-05-05 16:09:14] Waiting... (29/30)
[2025-05-05 16:09:15] Waiting... (30/30)
[2025-05-05 16:09:17] Checking service health status:
[2025-05-05 16:09:17] Checking PostgreSQL...
docker: 'docker exec' requires at least 2 arguments

Usage:  docker exec [OPTIONS] CONTAINER COMMAND [ARG...]

See 'docker exec --help' for more information
[2025-05-05 16:09:17] WARNING: PostgreSQL may not be ready yet.
[2025-05-05 16:09:17] Initializing Cassandra schema...
Error response from daemon: No such container: cqlsh
[2025-05-05 16:09:18] WARNING: Cassandra initialization script ran with errors (this might be normal if already initialized).
[2025-05-05 16:09:18] Checking Kafka topics...
Error response from daemon: No such container: kafka-topics.sh
[2025-05-05 16:09:19] WARNING: Kafka may not be ready yet.
[2025-05-05 16:09:19] Checking MongoDB...
Error response from daemon: No such container: mongo
[2025-05-05 16:09:19] WARNING: MongoDB may not be ready yet.
[2025-05-05 16:09:20] Generating test data...
[2025-05-05 16:09:24] Checking API health...
[2025-05-05 16:09:24] Attempt 1/10...
[2025-05-05 16:09:27] API not ready yet. Waiting...
[2025-05-05 16:09:32] Attempt 2/10...
[2025-05-05 16:09:35] API not ready yet. Waiting...
[2025-05-05 16:09:40] Attempt 3/10...
[2025-05-05 16:09:42] API not ready yet. Waiting...
[2025-05-05 16:09:47] Attempt 4/10...
[2025-05-05 16:09:50] API not ready yet. Waiting...
[2025-05-05 16:09:55] Attempt 5/10...
[2025-05-05 16:09:57] API not ready yet. Waiting...
[2025-05-05 16:10:02] Attempt 6/10...
[2025-05-05 16:10:05] API not ready yet. Waiting...
[2025-05-05 16:10:10] Attempt 7/10...
[2025-05-05 16:10:12] API not ready yet. Waiting...
[2025-05-05 16:10:17] Attempt 8/10...
[2025-05-05 16:10:19] API not ready yet. Waiting...
[2025-05-05 16:10:25] Attempt 9/10...
[2025-05-05 16:10:27] API not ready yet. Waiting...
[2025-05-05 16:10:32] Attempt 10/10...
[2025-05-05 16:10:34] WARNING: API health check failed after 10 attempts.
[2025-05-05 16:10:34] Mini-Twitter system deployment completed!
[2025-05-05 16:10:34] Access the services at:
[2025-05-05 16:10:34]   - API: http://localhost:8000
[2025-05-05 16:10:35]   - API Documentation: http://localhost:8000/docs
[2025-05-05 16:10:35]   - Frontend: http://localhost:3000
[2025-05-05 16:10:35]   - Spark Master UI: http://localhost:8080
[2025-05-05 16:10:35]   - Minio Console: http://localhost:9001 (user: minioadmin, password: minioadmin)
[2025-05-05 16:10:35] Deployment log saved to: deployment_20250505_160659.log
