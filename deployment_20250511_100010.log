[2025-05-11 10:00:10] Starting Mini-Twitter deployment...
[2025-05-11 10:00:10] Checking for required tools...
[2025-05-11 10:00:10] Docker and Docker Compose are available.
[2025-05-11 10:00:10] Building and starting containers...
Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
#0 building with "desktop-linux" instance using docker driver

#1 [api internal] load build definition from Dockerfile
#1 transferring dockerfile: 251B 0.0s done
#1 DONE 0.0s

#2 [api internal] load metadata for docker.io/library/python:3.9-slim
#2 DONE 1.7s

#3 [api internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [api 1/5] FROM docker.io/library/python:3.9-slim@sha256:bef8d69306a7905f55cd523f5604de1dde45bbf745ba896dbb89f6d15c727170
#4 DONE 0.0s

#5 [api internal] load build context
#5 transferring context: 111.42kB 0.0s done
#5 DONE 0.0s

#6 [api 2/5] WORKDIR /app
#6 CACHED

#7 [api 3/5] COPY requirements.txt .
#7 CACHED

#8 [api 4/5] RUN pip install --no-cache-dir -r requirements.txt
#8 CACHED

#9 [api 5/5] COPY . .
#9 DONE 0.1s

#10 [api] exporting to image
#10 exporting layers 0.0s done
#10 writing image sha256:ce698fa4b429e9c2e2c2ef052913a8799ae0b9f7ad66c18c2199c0be001ec258 done
#10 naming to docker.io/library/mini-twitter-v3-api done
#10 DONE 0.1s

#11 [api] resolving provenance for metadata file
#11 DONE 0.0s

#12 [frontend internal] load build definition from Dockerfile
#12 transferring dockerfile: 157B done
#12 DONE 0.0s

#13 [frontend internal] load metadata for docker.io/library/node:16
#13 DONE 1.2s

#14 [frontend internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [frontend 1/5] FROM docker.io/library/node:16@sha256:f77a1aef2da8d83e45ec990f45df50f1a286c5fe8bbfb8c6e4246c6389705c0b
#15 DONE 0.0s

#16 [frontend internal] load build context
#16 transferring context: 45.62kB 0.0s done
#16 DONE 0.0s

#17 [frontend 3/5] COPY package.json ./
#17 CACHED

#18 [frontend 2/5] WORKDIR /app
#18 CACHED

#19 [frontend 4/5] RUN npm install
#19 CACHED

#20 [frontend 5/5] COPY . .
#20 DONE 0.1s

#21 [frontend] exporting to image
#21 exporting layers 0.1s done
#21 writing image sha256:e1b4d61998e47b919317a7856a2b3a57f56b74aa81d40aa91b93e429c56975ea done
#21 naming to docker.io/library/mini-twitter-v3-frontend done
#21 DONE 0.1s

#22 [frontend] resolving provenance for metadata file
#22 DONE 0.0s
 api  Built
 frontend  Built
 Container mini-twitter-v3-cassandra-1  Running
 Container mini-twitter-v3-zookeeper-1  Running
 Container mini-twitter-v3-minio-1  Running
 Container mini-twitter-v3-mongodb-1  Running
 Container mini-twitter-v3-spark-master-1  Running
 Container mini-twitter-v3-postgres-1  Running
 Container mini-twitter-v3-kafka-1  Running
 Container mini-twitter-v3-spark-worker-1  Running
 Container mini-twitter-v3-frontend-1  Stopping
 Container mini-twitter-v3-frontend-1  Stopped
 Container mini-twitter-v3-api-1  Recreate
 Container mini-twitter-v3-api-1  Recreated
 Container mini-twitter-v3-frontend-1  Recreate
 Container mini-twitter-v3-frontend-1  Recreated
 Container mini-twitter-v3-zookeeper-1  Waiting
 Container mini-twitter-v3-zookeeper-1  Healthy
 Container mini-twitter-v3-mongodb-1  Waiting
 Container mini-twitter-v3-kafka-1  Waiting
 Container mini-twitter-v3-postgres-1  Waiting
 Container mini-twitter-v3-postgres-1  Healthy
 Container mini-twitter-v3-kafka-1  Healthy
 Container mini-twitter-v3-mongodb-1  Healthy
 Container mini-twitter-v3-api-1  Starting
 Container mini-twitter-v3-api-1  Started
 Container mini-twitter-v3-frontend-1  Starting
 Container mini-twitter-v3-frontend-1  Started
[2025-05-11 10:00:20] Containers started. Listing running containers:
CONTAINER ID   IMAGE                                      COMMAND                  CREATED         STATUS                           PORTS                                                       NAMES
a80203200345   mini-twitter-v3-frontend                   "docker-entrypoint.s…"   1 second ago    Up Less than a second            0.0.0.0:3000->3000/tcp                                      mini-twitter-v3-frontend-1
e6502ddc13f9   mini-twitter-v3-api                        "uvicorn main:app --…"   3 seconds ago   Up 1 second (health: starting)   0.0.0.0:8000->8000/tcp                                      mini-twitter-v3-api-1
cd74e55e2dd9   bitnami/spark:3.3                          "/opt/bitnami/script…"   19 hours ago    Up 19 hours                                                                                  mini-twitter-v3-spark-worker-1
23fb2d6c9d5f   bitnami/kafka:3.4                          "/opt/bitnami/script…"   19 hours ago    Up 19 hours (healthy)            0.0.0.0:9092->9092/tcp                                      mini-twitter-v3-kafka-1
e7726b46a6a8   mongo:5                                    "docker-entrypoint.s…"   19 hours ago    Up 19 hours (healthy)            0.0.0.0:27017->27017/tcp                                    mini-twitter-v3-mongodb-1
8be88fdcbdfd   postgres:14                                "docker-entrypoint.s…"   19 hours ago    Up 19 hours (healthy)            0.0.0.0:5433->5432/tcp                                      mini-twitter-v3-postgres-1
6cf28112cc3e   cassandra:4                                "docker-entrypoint.s…"   19 hours ago    Up 19 hours (healthy)            7000-7001/tcp, 7199/tcp, 9160/tcp, 0.0.0.0:9042->9042/tcp   mini-twitter-v3-cassandra-1
124722ba9357   bitnami/zookeeper:3.8                      "/opt/bitnami/script…"   19 hours ago    Up 19 hours (healthy)            2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp        mini-twitter-v3-zookeeper-1
1e0085617c5a   minio/minio:RELEASE.2023-07-07T07-13-57Z   "/usr/bin/docker-ent…"   19 hours ago    Up 19 hours                      0.0.0.0:9000-9001->9000-9001/tcp                            mini-twitter-v3-minio-1
8ca7fb592e83   bitnami/spark:3.3                          "/opt/bitnami/script…"   19 hours ago    Up 19 hours                      0.0.0.0:7077->7077/tcp, 0.0.0.0:8080->8080/tcp              mini-twitter-v3-spark-master-1
[2025-05-11 10:00:21] Waiting for services to be ready...
[2025-05-11 10:00:21] Waiting... (1/30)
[2025-05-11 10:00:22] Waiting... (2/30)
[2025-05-11 10:00:23] Waiting... (3/30)
[2025-05-11 10:00:24] Waiting... (4/30)
[2025-05-11 10:00:25] Waiting... (5/30)
[2025-05-11 10:00:26] Waiting... (6/30)
[2025-05-11 10:00:27] Waiting... (7/30)
[2025-05-11 10:00:29] Waiting... (8/30)
[2025-05-11 10:00:30] Waiting... (9/30)
[2025-05-11 10:00:31] Waiting... (10/30)
[2025-05-11 10:00:32] Waiting... (11/30)
[2025-05-11 10:00:33] Waiting... (12/30)
[2025-05-11 10:00:34] Waiting... (13/30)
[2025-05-11 10:00:35] Waiting... (14/30)
[2025-05-11 10:00:36] Waiting... (15/30)
[2025-05-11 10:00:37] Waiting... (16/30)
[2025-05-11 10:00:38] Waiting... (17/30)
[2025-05-11 10:00:39] Waiting... (18/30)
[2025-05-11 10:00:40] Waiting... (19/30)
[2025-05-11 10:00:41] Waiting... (20/30)
[2025-05-11 10:00:42] Waiting... (21/30)
[2025-05-11 10:00:44] Waiting... (22/30)
[2025-05-11 10:00:45] Waiting... (23/30)
[2025-05-11 10:00:46] Waiting... (24/30)
[2025-05-11 10:00:47] Waiting... (25/30)
[2025-05-11 10:00:48] Waiting... (26/30)
[2025-05-11 10:00:49] Waiting... (27/30)
[2025-05-11 10:00:50] Waiting... (28/30)
[2025-05-11 10:00:51] Waiting... (29/30)
[2025-05-11 10:00:52] Waiting... (30/30)
[2025-05-11 10:00:53] Checking service health status:
[2025-05-11 10:00:53] Checking PostgreSQL...
docker: 'docker exec' requires at least 2 arguments

Usage:  docker exec [OPTIONS] CONTAINER COMMAND [ARG...]

See 'docker exec --help' for more information
[2025-05-11 10:00:54] WARNING: PostgreSQL may not be ready yet.
[2025-05-11 10:00:54] Initializing Cassandra schema...
Error response from daemon: No such container: cqlsh
[2025-05-11 10:00:54] WARNING: Cassandra initialization script ran with errors (this might be normal if already initialized).
[2025-05-11 10:00:54] Checking Kafka topics...
Error response from daemon: No such container: kafka-topics.sh
[2025-05-11 10:00:55] WARNING: Kafka may not be ready yet.
[2025-05-11 10:00:55] Checking MongoDB...
Error response from daemon: No such container: mongo
[2025-05-11 10:00:55] WARNING: MongoDB may not be ready yet.
[2025-05-11 10:00:55] Generating test data...
[2025-05-11 10:00:58] Checking API health...
[2025-05-11 10:00:58] Attempt 1/10...
{"status":"ok","timestamp":"2025-05-11T05:00:59.811592","storage_status":"available","storage_details":{"endpoint":"http://minio:9000","tried_hostnames":["172.20.0.11","minio","localhost","minio"]}}[2025-05-11 10:00:58] SUCCESS: API is healthy!
[2025-05-11 10:00:58] Mini-Twitter system deployment completed!
[2025-05-11 10:00:58] Access the services at:
[2025-05-11 10:00:58]   - API: http://localhost:8000
[2025-05-11 10:00:58]   - API Documentation: http://localhost:8000/docs
[2025-05-11 10:00:58]   - Frontend: http://localhost:3000
[2025-05-11 10:00:58]   - Spark Master UI: http://localhost:8080
[2025-05-11 10:00:59]   - Minio Console: http://localhost:9001 (user: minioadmin, password: minioadmin)
[2025-05-11 10:00:59] Deployment log saved to: deployment_20250511_100010.log
