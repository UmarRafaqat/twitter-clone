[2025-05-12 22:19:38] Starting Mini-Twitter deployment...
[2025-05-12 22:19:38] Checking for required tools...
[2025-05-12 22:19:38] Docker and Docker Compose are available.
[2025-05-12 22:19:38] Building and starting containers...
Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
#0 building with "desktop-linux" instance using docker driver

#1 [api internal] load build definition from Dockerfile
#1 transferring dockerfile: 251B 0.0s done
#1 DONE 0.0s

#2 [kafka-consumers internal] load build definition from Dockerfile
#2 transferring dockerfile: 320B done
#2 DONE 0.1s

#3 [spark-scheduler internal] load build definition from Dockerfile
#3 transferring dockerfile: 584B done
#3 DONE 0.1s

#4 [spark-scheduler internal] load metadata for docker.io/bitnami/spark:3.3
#4 DONE 0.0s

#5 [spark-scheduler internal] load .dockerignore
#5 transferring context: 2B done
#5 DONE 0.0s

#6 [kafka-consumers internal] load metadata for docker.io/library/python:3.9-slim
#6 ...

#7 [spark-scheduler 1/7] FROM docker.io/bitnami/spark:3.3
#7 DONE 0.0s

#8 [spark-scheduler internal] load build context
#8 transferring context: 276B done
#8 DONE 0.0s

#9 [spark-scheduler 3/7] COPY requirements.txt /tmp/
#9 CACHED

#10 [spark-scheduler 4/7] RUN pip install --no-cache-dir -r /tmp/requirements.txt
#10 CACHED

#11 [spark-scheduler 5/7] WORKDIR /opt/spark-jobs
#11 CACHED

#12 [spark-scheduler 6/7] COPY *.py /opt/spark-jobs/
#12 CACHED

#13 [spark-scheduler 2/7] RUN apt-get update && apt-get install -y     build-essential     python3-dev     && apt-get clean     && rm -rf /var/lib/apt/lists/*
#13 CACHED

#14 [spark-scheduler 7/7] RUN chmod -R 755 /opt/spark-jobs
#14 CACHED

#15 [spark-scheduler] exporting to image
#15 exporting layers done
#15 writing image sha256:67780f5565591dff52a9302a09413a69a57ce8d94eade3f888d239dea1e369dd done
#15 naming to docker.io/library/mini-twitter-v-full-ui-correct-spark-scheduler done
#15 DONE 0.0s

#16 [spark-scheduler] resolving provenance for metadata file
#16 DONE 0.0s

#6 [kafka-consumers internal] load metadata for docker.io/library/python:3.9-slim
#6 DONE 3.4s

#17 [kafka-consumers internal] load .dockerignore
#17 transferring context: 2B done
#17 DONE 0.0s

#18 [api internal] load .dockerignore
#18 transferring context: 2B done
#18 DONE 0.0s

#19 [api 1/7] FROM docker.io/library/python:3.9-slim@sha256:bef8d69306a7905f55cd523f5604de1dde45bbf745ba896dbb89f6d15c727170
#19 DONE 0.0s

#20 [kafka-consumers internal] load build context
#20 transferring context: 819B done
#20 DONE 0.0s

#21 [api internal] load build context
#21 transferring context: 277B 0.0s done
#21 DONE 0.1s

#22 [kafka-consumers 6/7] RUN python -m textblob.download_corpora
#22 CACHED

#23 [kafka-consumers 4/7] RUN pip install --no-cache-dir -r requirements.txt
#23 CACHED

#24 [kafka-consumers 3/7] COPY requirements.txt .
#24 CACHED

#25 [kafka-consumers 5/7] RUN python -m nltk.downloader punkt
#25 CACHED

#26 [kafka-consumers 7/7] COPY . .
#26 CACHED

#27 [api 4/5] RUN pip install --no-cache-dir -r requirements.txt
#27 CACHED

#28 [api 3/5] COPY requirements.txt .
#28 CACHED

#29 [api 2/7] WORKDIR /app
#29 CACHED

#30 [api 5/5] COPY . .
#30 CACHED

#31 [kafka-consumers] exporting to image
#31 exporting layers done
#31 writing image sha256:c899469b1ce2c5c6e576fc2fa466906fee53acb9223172a73eee1d9263e186ce done
#31 naming to docker.io/library/mini-twitter-v-full-ui-correct-kafka-consumers 0.0s done
#31 DONE 0.0s

#32 [api] exporting to image
#32 exporting layers done
#32 writing image sha256:ac3729c77d3c2a9e269a12e296ecd04dbd45687a39ec78710ac4fa3349674d8f 0.0s done
#32 naming to docker.io/library/mini-twitter-v-full-ui-correct-api done
#32 DONE 0.0s

#33 [kafka-consumers] resolving provenance for metadata file
#33 DONE 0.0s

#34 [api] resolving provenance for metadata file
#34 DONE 0.0s

#35 [frontend internal] load build definition from Dockerfile
#35 transferring dockerfile: 157B done
#35 DONE 0.0s

#36 [frontend internal] load metadata for docker.io/library/node:16
#36 DONE 9.1s

#37 [frontend internal] load .dockerignore
#37 transferring context: 2B done
#37 DONE 0.0s

#38 [frontend 1/5] FROM docker.io/library/node:16@sha256:f77a1aef2da8d83e45ec990f45df50f1a286c5fe8bbfb8c6e4246c6389705c0b
#38 DONE 0.0s

#39 [frontend internal] load build context
#39 transferring context: 1.71kB done
#39 DONE 0.0s

#40 [frontend 2/5] WORKDIR /app
#40 CACHED

#41 [frontend 3/5] COPY package.json ./
#41 CACHED

#42 [frontend 4/5] RUN npm install
#42 CACHED

#43 [frontend 5/5] COPY . .
#43 CACHED

#44 [frontend] exporting to image
#44 exporting layers done
#44 writing image sha256:f409c9d4d525452a4b66a75fdba46df3a0a49d605b04614c85a796d6f542bbbb done
#44 naming to docker.io/library/mini-twitter-v-full-ui-correct-frontend done
#44 DONE 0.0s

#45 [frontend] resolving provenance for metadata file
#45 DONE 0.0s
 api  Built
 frontend  Built
 kafka-consumers  Built
 spark-scheduler  Built
 Container mini-twitter-v-full-ui-correct-cassandra-1  Creating
 Container mini-twitter-v-full-ui-correct-mongodb-1  Creating
 Container mini-twitter-v-full-ui-correct-spark-master-1  Creating
 Container mini-twitter-v-full-ui-correct-minio-1  Creating
 Container mini-twitter-v-full-ui-correct-zookeeper-1  Creating
 Container mini-twitter-v-full-ui-correct-postgres-1  Created
 Container mini-twitter-v-full-ui-correct-zookeeper-1  Created
 Container mini-twitter-v-full-ui-correct-kafka-1  Creating
 Container mini-twitter-v-full-ui-correct-spark-master-1  Created
 Container mini-twitter-v-full-ui-correct-spark-worker-1  Creating
 Container mini-twitter-v-full-ui-correct-cassandra-1  Created
 Container mini-twitter-v-full-ui-correct-minio-1  Created
 Container mini-twitter-v-full-ui-correct-mongodb-1  Created
 Container mini-twitter-v-full-ui-correct-spark-scheduler-1  Creating
 Container mini-twitter-v-full-ui-correct-kafka-1  Created
 Container mini-twitter-v-full-ui-correct-api-1  Creating
 Container mini-twitter-v-full-ui-correct-kafka-consumers-1  Creating
 Container mini-twitter-v-full-ui-correct-spark-worker-1  Created
 Container mini-twitter-v-full-ui-correct-spark-scheduler-1  Created
 Container mini-twitter-v-full-ui-correct-kafka-consumers-1  Created
 Container mini-twitter-v-full-ui-correct-api-1  Created
 Container mini-twitter-v-full-ui-correct-frontend-1  Creating
 Container mini-twitter-v-full-ui-correct-frontend-1  Created
 Container mini-twitter-v-full-ui-correct-mongodb-1  Starting
 Container mini-twitter-v-full-ui-correct-postgres-1  Starting
 Container mini-twitter-v-full-ui-correct-spark-master-1  Starting
 Container mini-twitter-v-full-ui-correct-cassandra-1  Starting
 Container mini-twitter-v-full-ui-correct-zookeeper-1  Starting
 Container mini-twitter-v-full-ui-correct-minio-1  Starting
 Container mini-twitter-v-full-ui-correct-spark-master-1  Started
 Container mini-twitter-v-full-ui-correct-spark-worker-1  Starting
 Container mini-twitter-v-full-ui-correct-zookeeper-1  Started
 Container mini-twitter-v-full-ui-correct-zookeeper-1  Waiting
 Container mini-twitter-v-full-ui-correct-minio-1  Started
 Container mini-twitter-v-full-ui-correct-postgres-1  Started
 Container mini-twitter-v-full-ui-correct-mongodb-1  Started
 Container mini-twitter-v-full-ui-correct-mongodb-1  Waiting
 Container mini-twitter-v-full-ui-correct-cassandra-1  Started
 Container mini-twitter-v-full-ui-correct-spark-worker-1  Started
 Container mini-twitter-v-full-ui-correct-zookeeper-1  Healthy
 Container mini-twitter-v-full-ui-correct-kafka-1  Starting
 Container mini-twitter-v-full-ui-correct-mongodb-1  Healthy
 Container mini-twitter-v-full-ui-correct-spark-scheduler-1  Starting
 Container mini-twitter-v-full-ui-correct-kafka-1  Started
 Container mini-twitter-v-full-ui-correct-mongodb-1  Waiting
 Container mini-twitter-v-full-ui-correct-postgres-1  Waiting
 Container mini-twitter-v-full-ui-correct-kafka-1  Waiting
 Container mini-twitter-v-full-ui-correct-postgres-1  Waiting
 Container mini-twitter-v-full-ui-correct-mongodb-1  Waiting
 Container mini-twitter-v-full-ui-correct-kafka-1  Waiting
 Container mini-twitter-v-full-ui-correct-spark-scheduler-1  Started
 Container mini-twitter-v-full-ui-correct-mongodb-1  Healthy
 Container mini-twitter-v-full-ui-correct-mongodb-1  Healthy
 Container mini-twitter-v-full-ui-correct-postgres-1  Healthy
 Container mini-twitter-v-full-ui-correct-postgres-1  Healthy
 Container mini-twitter-v-full-ui-correct-kafka-1  Healthy
 Container mini-twitter-v-full-ui-correct-api-1  Starting
 Container mini-twitter-v-full-ui-correct-kafka-1  Healthy
 Container mini-twitter-v-full-ui-correct-kafka-consumers-1  Starting
 Container mini-twitter-v-full-ui-correct-kafka-consumers-1  Started
 Container mini-twitter-v-full-ui-correct-api-1  Started
 Container mini-twitter-v-full-ui-correct-frontend-1  Starting
 Container mini-twitter-v-full-ui-correct-frontend-1  Started
[2025-05-12 22:20:58] Containers started. Listing running containers:
CONTAINER ID   IMAGE                                             COMMAND                  CREATED              STATUS                           PORTS                                                       NAMES
bbf0d22cc67d   mini-twitter-v-full-ui-correct-frontend           "docker-entrypoint.s…"   About a minute ago   Up Less than a second            0.0.0.0:3000->3000/tcp                                      mini-twitter-v-full-ui-correct-frontend-1
3dd9c418a7ee   mini-twitter-v-full-ui-correct-kafka-consumers    "python main.py"         About a minute ago   Up 1 second                                                                                  mini-twitter-v-full-ui-correct-kafka-consumers-1
5d89f6fd4fcc   mini-twitter-v-full-ui-correct-api                "uvicorn main:app --…"   About a minute ago   Up 1 second (health: starting)   0.0.0.0:8000->8000/tcp                                      mini-twitter-v-full-ui-correct-api-1
fed0a0e64209   mini-twitter-v-full-ui-correct-spark-scheduler    "/opt/bitnami/script…"   About a minute ago   Up 29 seconds                                                                                mini-twitter-v-full-ui-correct-spark-scheduler-1
b760cf3f0393   bitnami/spark:3.3                                 "/opt/bitnami/script…"   About a minute ago   Up 35 seconds                                                                                mini-twitter-v-full-ui-correct-spark-worker-1
763d547c6b8f   bitnami/kafka:3.4                                 "/opt/bitnami/script…"   About a minute ago   Up 30 seconds (healthy)          0.0.0.0:9092->9092/tcp                                      mini-twitter-v-full-ui-correct-kafka-1
1ccc7eef8d6c   mongo:5                                           "docker-entrypoint.s…"   About a minute ago   Up 36 seconds (healthy)          0.0.0.0:27017->27017/tcp                                    mini-twitter-v-full-ui-correct-mongodb-1
44424dbbaa77   minio/minio:RELEASE.2023-07-07T07-13-57Z          "/usr/bin/docker-ent…"   About a minute ago   Up 36 seconds                    0.0.0.0:9000-9001->9000-9001/tcp                            mini-twitter-v-full-ui-correct-minio-1
4dc0fb731edd   cassandra:4                                       "docker-entrypoint.s…"   About a minute ago   Up 35 seconds (healthy)          7000-7001/tcp, 7199/tcp, 9160/tcp, 0.0.0.0:9042->9042/tcp   mini-twitter-v-full-ui-correct-cassandra-1
a2b9b223b673   bitnami/zookeeper:3.8                             "/opt/bitnami/script…"   About a minute ago   Up 36 seconds (healthy)          2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp        mini-twitter-v-full-ui-correct-zookeeper-1
5100e46063f8   bitnami/spark:3.3                                 "/opt/bitnami/script…"   About a minute ago   Up 36 seconds                    0.0.0.0:7077->7077/tcp, 0.0.0.0:8080->8080/tcp              mini-twitter-v-full-ui-correct-spark-master-1
7924f7148de6   postgres:14                                       "docker-entrypoint.s…"   About a minute ago   Up 35 seconds (healthy)          0.0.0.0:5433->5432/tcp                                      mini-twitter-v-full-ui-correct-postgres-1
81693c9d91f3   mini-twitter-v-full-ui_kafka-sp-hashtag-trends    "/opt/bitnami/script…"   28 hours ago         Restarting (1) 12 seconds ago                                                                mini-twitter-v-full-ui_kafka-sp-hashtag-trends-1
6bc2071de4aa   mini-twitter-v-full-ui_kafka-sp-user-engagement   "/opt/bitnami/script…"   28 hours ago         Restarting (1) 15 seconds ago                                                                mini-twitter-v-full-ui_kafka-sp-user-engagement-1
[2025-05-12 22:20:58] Waiting for services to be ready...
[2025-05-12 22:20:59] Waiting... (1/30)
[2025-05-12 22:21:00] Waiting... (2/30)
[2025-05-12 22:21:01] Waiting... (3/30)
[2025-05-12 22:21:02] Waiting... (4/30)
[2025-05-12 22:21:03] Waiting... (5/30)
[2025-05-12 22:21:04] Waiting... (6/30)
[2025-05-12 22:21:06] Waiting... (7/30)
[2025-05-12 22:21:07] Waiting... (8/30)
[2025-05-12 22:21:08] Waiting... (9/30)
[2025-05-12 22:21:09] Waiting... (10/30)
[2025-05-12 22:21:10] Waiting... (11/30)
[2025-05-12 22:21:11] Waiting... (12/30)
[2025-05-12 22:21:12] Waiting... (13/30)
[2025-05-12 22:21:13] Waiting... (14/30)
[2025-05-12 22:21:15] Waiting... (15/30)
[2025-05-12 22:21:16] Waiting... (16/30)
[2025-05-12 22:21:17] Waiting... (17/30)
[2025-05-12 22:21:18] Waiting... (18/30)
[2025-05-12 22:21:19] Waiting... (19/30)
[2025-05-12 22:21:20] Waiting... (20/30)
[2025-05-12 22:21:21] Waiting... (21/30)
[2025-05-12 22:21:23] Waiting... (22/30)
[2025-05-12 22:21:24] Waiting... (23/30)
[2025-05-12 22:21:25] Waiting... (24/30)
[2025-05-12 22:21:26] Waiting... (25/30)
[2025-05-12 22:21:27] Waiting... (26/30)
[2025-05-12 22:21:28] Waiting... (27/30)
[2025-05-12 22:21:29] Waiting... (28/30)
[2025-05-12 22:21:30] Waiting... (29/30)
[2025-05-12 22:21:31] Waiting... (30/30)
[2025-05-12 22:21:32] Checking service health status:
[2025-05-12 22:21:32] Checking PostgreSQL...
docker: 'docker exec' requires at least 2 arguments

Usage:  docker exec [OPTIONS] CONTAINER COMMAND [ARG...]

See 'docker exec --help' for more information
[2025-05-12 22:21:33] WARNING: PostgreSQL may not be ready yet.
[2025-05-12 22:21:33] Initializing Cassandra schema...
Error response from daemon: No such container: cqlsh
[2025-05-12 22:21:33] WARNING: Cassandra initialization script ran with errors (this might be normal if already initialized).
[2025-05-12 22:21:34] Checking Kafka topics...
Error response from daemon: No such container: kafka-topics.sh
[2025-05-12 22:21:34] WARNING: Kafka may not be ready yet.
[2025-05-12 22:21:34] Checking MongoDB...
Error response from daemon: No such container: mongo
[2025-05-12 22:21:35] WARNING: MongoDB may not be ready yet.
[2025-05-12 22:21:35] Generating test data...
[2025-05-12 22:21:36] Checking API health...
[2025-05-12 22:21:36] Attempt 1/10...
[2025-05-12 22:21:38] API not ready yet. Waiting...
[2025-05-12 22:21:43] Attempt 2/10...
[2025-05-12 22:21:46] API not ready yet. Waiting...
[2025-05-12 22:21:51] Attempt 3/10...
[2025-05-12 22:21:53] API not ready yet. Waiting...
[2025-05-12 22:21:58] Attempt 4/10...
{"status":"ok","timestamp":"2025-05-12T17:22:00.758999","storage_status":"available","storage_details":{"endpoint":"http://minio:9000","tried_hostnames":["172.20.0.11","minio","localhost","minio"]}}[2025-05-12 22:21:58] SUCCESS: API is healthy!
[2025-05-12 22:21:58] Mini-Twitter system deployment completed!
[2025-05-12 22:21:58] Access the services at:
[2025-05-12 22:21:58]   - API: http://localhost:8000
[2025-05-12 22:21:58]   - API Documentation: http://localhost:8000/docs
[2025-05-12 22:21:58]   - Frontend: http://localhost:3000
[2025-05-12 22:21:58]   - Spark Master UI: http://localhost:8080
[2025-05-12 22:21:58]   - Minio Console: http://localhost:9001 (user: minioadmin, password: minioadmin)
[2025-05-12 22:21:58] Deployment log saved to: deployment_20250512_221938.log
