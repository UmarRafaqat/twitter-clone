[2025-05-01 16:37:31] Starting Mini-Twitter deployment...
[2025-05-01 16:37:31] Checking for required tools...
[2025-05-01 16:37:31] Docker and Docker Compose are available.
[2025-05-01 16:37:31] Building and starting containers...
time="2025-05-01T16:37:32+05:00" level=warning msg="E:\\Data Science MS\\big data\\bigdata-project\\mini-twitter\\docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion"
Compose can now delegate builds to bake for better performance.
 To do so, set COMPOSE_BAKE=true.
#0 building with "desktop-linux" instance using docker driver

#1 [api internal] load build definition from Dockerfile
#1 transferring dockerfile: 251B done
#1 DONE 0.0s

#2 [api internal] load metadata for docker.io/library/python:3.9-slim
#2 DONE 1.5s

#3 [api internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [api 1/5] FROM docker.io/library/python:3.9-slim@sha256:bef8d69306a7905f55cd523f5604de1dde45bbf745ba896dbb89f6d15c727170
#4 DONE 0.0s

#5 [api internal] load build context
#5 transferring context: 95B done
#5 DONE 0.0s

#6 [api 2/5] WORKDIR /app
#6 CACHED

#7 [api 3/5] COPY requirements.txt .
#7 CACHED

#8 [api 4/5] RUN pip install --no-cache-dir -r requirements.txt
#8 CACHED

#9 [api 5/5] COPY . .
#9 CACHED

#10 [api] exporting to image
#10 exporting layers done
#10 writing image sha256:9ddff8e0160ecfc0d8c5b0f85c52be023031581b7e7b9bd7f5d4a14b509c5480 done
#10 naming to docker.io/library/mini-twitter-api done
#10 DONE 0.0s

#11 [api] resolving provenance for metadata file
#11 DONE 0.0s

#12 [frontend internal] load build definition from Dockerfile
#12 transferring dockerfile: 157B done
#12 DONE 0.0s

#13 [frontend internal] load metadata for docker.io/library/node:16
#13 DONE 1.0s

#14 [frontend internal] load .dockerignore
#14 transferring context: 2B done
#14 DONE 0.0s

#15 [frontend 1/5] FROM docker.io/library/node:16@sha256:f77a1aef2da8d83e45ec990f45df50f1a286c5fe8bbfb8c6e4246c6389705c0b
#15 DONE 0.0s

#16 [frontend internal] load build context
#16 transferring context: 693B done
#16 DONE 0.0s

#17 [frontend 2/5] WORKDIR /app
#17 CACHED

#18 [frontend 3/5] COPY package.json ./
#18 CACHED

#19 [frontend 4/5] RUN npm install
#19 CACHED

#20 [frontend 5/5] COPY . .
#20 DONE 0.0s

#21 [frontend] exporting to image
#21 exporting layers 0.0s done
#21 writing image sha256:4c954808948fba91484101176c3c2a83a89262451ddc695513e84a92f0957dc0 done
#21 naming to docker.io/library/mini-twitter-frontend done
#21 DONE 0.1s

#22 [frontend] resolving provenance for metadata file
#22 DONE 0.0s
 api  Built
 frontend  Built
 Container mini-twitter-zookeeper-1  Created
 Container mini-twitter-mongodb-1  Created
 Container mini-twitter-cassandra-1  Created
 Container mini-twitter-spark-master-1  Created
 Container mini-twitter-minio-1  Created
 Container mini-twitter-postgres-1  Created
 Container mini-twitter-kafka-1  Created
 Container mini-twitter-spark-worker-1  Created
 Container mini-twitter-api-1  Created
 Container mini-twitter-frontend-1  Recreate
 Container mini-twitter-frontend-1  Recreated
 Container mini-twitter-minio-1  Starting
 Container mini-twitter-mongodb-1  Starting
 Container mini-twitter-zookeeper-1  Starting
 Container mini-twitter-cassandra-1  Starting
 Container mini-twitter-spark-master-1  Starting
 Container mini-twitter-postgres-1  Starting
 Container mini-twitter-zookeeper-1  Started
 Container mini-twitter-zookeeper-1  Waiting
 Container mini-twitter-mongodb-1  Started
 Container mini-twitter-minio-1  Started
 Container mini-twitter-postgres-1  Started
 Container mini-twitter-cassandra-1  Started
 Container mini-twitter-spark-master-1  Started
 Container mini-twitter-spark-worker-1  Starting
 Container mini-twitter-spark-worker-1  Started
 Container mini-twitter-zookeeper-1  Healthy
 Container mini-twitter-kafka-1  Starting
 Container mini-twitter-kafka-1  Started
 Container mini-twitter-mongodb-1  Waiting
 Container mini-twitter-kafka-1  Waiting
 Container mini-twitter-postgres-1  Waiting
 Container mini-twitter-mongodb-1  Healthy
 Container mini-twitter-postgres-1  Healthy
 Container mini-twitter-kafka-1  Healthy
 Container mini-twitter-api-1  Starting
 Container mini-twitter-api-1  Started
 Container mini-twitter-frontend-1  Starting
 Container mini-twitter-frontend-1  Started
[2025-05-01 16:37:53] Containers started. Listing running containers:
CONTAINER ID   IMAGE                                      COMMAND                  CREATED          STATUS                             PORTS                                                       NAMES
337f425e61b0   mini-twitter-frontend                      "docker-entrypoint.s…"   19 seconds ago   Up Less than a second              0.0.0.0:3000->3000/tcp                                      mini-twitter-frontend-1
1f16acb21232   mini-twitter-api                           "uvicorn main:app --…"   2 minutes ago    Up 1 second (health: starting)     0.0.0.0:8000->8000/tcp                                      mini-twitter-api-1
7d8433b667a2   bitnami/kafka:3.4                          "/opt/bitnami/script…"   2 minutes ago    Up 13 seconds (healthy)            0.0.0.0:9092->9092/tcp                                      mini-twitter-kafka-1
ac975a84d2ae   bitnami/zookeeper:3.8                      "/opt/bitnami/script…"   3 minutes ago    Up 19 seconds (healthy)            2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp        mini-twitter-zookeeper-1
440076a02dea   mongo:5                                    "docker-entrypoint.s…"   3 minutes ago    Up 19 seconds (healthy)            0.0.0.0:27017->27017/tcp                                    mini-twitter-mongodb-1
7b4078fe8f59   minio/minio:RELEASE.2023-07-07T07-13-57Z   "/usr/bin/docker-ent…"   3 minutes ago    Up 19 seconds (health: starting)   0.0.0.0:9000-9001->9000-9001/tcp                            mini-twitter-minio-1
0ff4f1119af8   cassandra:4                                "docker-entrypoint.s…"   3 minutes ago    Up 19 seconds (healthy)            7000-7001/tcp, 7199/tcp, 9160/tcp, 0.0.0.0:9042->9042/tcp   mini-twitter-cassandra-1
4e5c758b5bae   postgres:14                                "docker-entrypoint.s…"   6 minutes ago    Up 19 seconds (healthy)            0.0.0.0:5433->5432/tcp                                      mini-twitter-postgres-1
1942f2895fc2   bitnami/spark:3.3                          "/opt/bitnami/script…"   12 minutes ago   Up 18 seconds                                                                                  mini-twitter-spark-worker-1
fb91acf61511   bitnami/spark:3.3                          "/opt/bitnami/script…"   12 minutes ago   Up 19 seconds                      0.0.0.0:7077->7077/tcp, 0.0.0.0:8080->8080/tcp              mini-twitter-spark-master-1
[2025-05-01 16:37:54] Waiting for services to be ready...
[2025-05-01 16:37:54] Waiting... (1/30)
[2025-05-01 16:37:55] Waiting... (2/30)
[2025-05-01 16:37:56] Waiting... (3/30)
[2025-05-01 16:37:57] Waiting... (4/30)
[2025-05-01 16:37:58] Waiting... (5/30)
[2025-05-01 16:37:59] Waiting... (6/30)
[2025-05-01 16:38:00] Waiting... (7/30)
[2025-05-01 16:38:01] Waiting... (8/30)
[2025-05-01 16:38:02] Waiting... (9/30)
[2025-05-01 16:38:04] Waiting... (10/30)
[2025-05-01 16:38:05] Waiting... (11/30)
[2025-05-01 16:38:06] Waiting... (12/30)
[2025-05-01 16:38:07] Waiting... (13/30)
[2025-05-01 16:38:08] Waiting... (14/30)
[2025-05-01 16:38:09] Waiting... (15/30)
[2025-05-01 16:38:10] Waiting... (16/30)
[2025-05-01 16:38:11] Waiting... (17/30)
[2025-05-01 16:38:12] Waiting... (18/30)
[2025-05-01 16:38:13] Waiting... (19/30)
[2025-05-01 16:38:14] Waiting... (20/30)
[2025-05-01 16:38:15] Waiting... (21/30)
[2025-05-01 16:38:16] Waiting... (22/30)
[2025-05-01 16:38:17] Waiting... (23/30)
[2025-05-01 16:38:18] Waiting... (24/30)
[2025-05-01 16:38:20] Waiting... (25/30)
[2025-05-01 16:38:21] Waiting... (26/30)
[2025-05-01 16:38:22] Waiting... (27/30)
[2025-05-01 16:38:23] Waiting... (28/30)
[2025-05-01 16:38:24] Waiting... (29/30)
[2025-05-01 16:38:25] Waiting... (30/30)
[2025-05-01 16:38:26] Checking service health status:
[2025-05-01 16:38:26] Checking PostgreSQL...
docker: 'docker exec' requires at least 2 arguments

Usage:  docker exec [OPTIONS] CONTAINER COMMAND [ARG...]

See 'docker exec --help' for more information
[2025-05-01 16:38:26] WARNING: PostgreSQL may not be ready yet.
[2025-05-01 16:38:26] Initializing Cassandra schema...
Error response from daemon: No such container: cqlsh
[2025-05-01 16:38:27] WARNING: Cassandra initialization script ran with errors (this might be normal if already initialized).
[2025-05-01 16:38:27] Checking Kafka topics...
Error response from daemon: No such container: kafka-topics.sh
[2025-05-01 16:38:27] WARNING: Kafka may not be ready yet.
[2025-05-01 16:38:27] Checking MongoDB...
Error response from daemon: No such container: mongo
[2025-05-01 16:38:28] WARNING: MongoDB may not be ready yet.
[2025-05-01 16:38:28] Generating test data...
Defaulting to user installation because normal site-packages is not writeable
Collecting faker
  Downloading faker-37.1.0-py3-none-any.whl.metadata (15 kB)
Requirement already satisfied: tzdata in c:\users\umar rafaqat\appdata\local\packages\pythonsoftwarefoundation.python.3.12_qbz5n2kfra8p0\localcache\local-packages\python312\site-packages (from faker) (2024.2)
Downloading faker-37.1.0-py3-none-any.whl (1.9 MB)
   ---------------------------------------- 1.9/1.9 MB 93.9 kB/s eta 0:00:00
Installing collected packages: faker
  WARNING: The script faker.exe is installed in 'C:\Users\Umar Rafaqat\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\Scripts' which is not on PATH.
  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.
Successfully installed faker-37.1.0

[notice] A new release of pip is available: 24.0 -> 25.0.1
[notice] To update, run: C:\Users\Umar Rafaqat\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\python.exe -m pip install --upgrade pip
Installing required packages...
[2025-05-01 16:39:20] Checking API health...
[2025-05-01 16:39:20] Attempt 1/10...
[2025-05-01 16:39:22] API not ready yet. Waiting...
[2025-05-01 16:39:28] Attempt 2/10...
[2025-05-01 16:39:30] API not ready yet. Waiting...
[2025-05-01 16:39:35] Attempt 3/10...
[2025-05-01 16:39:37] API not ready yet. Waiting...
[2025-05-01 16:39:42] Attempt 4/10...
[2025-05-01 16:39:45] API not ready yet. Waiting...
[2025-05-01 16:39:50] Attempt 5/10...
[2025-05-01 16:39:52] API not ready yet. Waiting...
[2025-05-01 16:39:57] Attempt 6/10...
[2025-05-01 16:40:00] API not ready yet. Waiting...
[2025-05-01 16:40:05] Attempt 7/10...
[2025-05-01 16:40:07] API not ready yet. Waiting...
[2025-05-01 16:40:12] Attempt 8/10...
[2025-05-01 16:40:14] API not ready yet. Waiting...
[2025-05-01 16:40:19] Attempt 9/10...
[2025-05-01 16:40:22] API not ready yet. Waiting...
[2025-05-01 16:40:27] Attempt 10/10...
[2025-05-01 16:40:29] WARNING: API health check failed after 10 attempts.
[2025-05-01 16:40:29] Mini-Twitter system deployment completed!
[2025-05-01 16:40:29] Access the services at:
[2025-05-01 16:40:29]   - API: http://localhost:8000
[2025-05-01 16:40:29]   - API Documentation: http://localhost:8000/docs
[2025-05-01 16:40:29]   - Frontend: http://localhost:3000
[2025-05-01 16:40:29]   - Spark Master UI: http://localhost:8080
[2025-05-01 16:40:30]   - Minio Console: http://localhost:9001 (user: minioadmin, password: minioadmin)
[2025-05-01 16:40:30] Deployment log saved to: deployment_20250501_163731.log
